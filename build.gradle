apply plugin: 'java'
apply plugin: 'fatjar'
apply plugin: 'application'

group = 'com.apmasphere'
version = '0.2'

sourceCompatibility = 1.7

mainClassName = 'com.apmasphere.billproto.BillprotoApplication'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath group: 'eu.appsatori', name: 'gradle-fatjar-plugin', version: '0.1.3'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

project.ext {
    dropwizardVersion = '0.7.0-SNAPSHOT'
    mongojackVersion = '2.0.0-RC5'
    dropWizardConfig = './src/main/resources/billproto.yml'
}

dependencies {
    compile 'io.dropwizard:dropwizard-core:' + dropwizardVersion
    compile 'org.mongojack:mongojack:' + mongojackVersion
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

// Configure the fatJar task
fatJar {
    classifier 'fat'

    // We need to add the main class to the manifest, otherwise the JAR won't start.
    manifest {
        attributes 'Main-Class': mainClassName
    }

    // We have to exclude signature files from the fat JAR, otherwise we'll get invalid signature file digest errors.
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

//TODO need to use SSH plugin instead of EXEC
task gcDeploy(type:Exec) {
    workingDir './build/libs'

    commandLine 'gcutil --project=rock-terra-402 push ray-interview *fat.jar /home/yun';

    //store the output instead of printing to the console:
    standardOutput = new ByteArrayOutputStream()

    //extension method stopTomcat.output() can be used to obtain the output:
    ext.output = {
        return standardOutput.toString()
    }
}

run {
    args 'server', dropWizardConfig
}

